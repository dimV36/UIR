--- M2Crypto-0.21.2/SWIG/_x509.i	2011-01-15 22:10:06.000000000 +0300
+++ M2Crypto-0.21.2/SWIG/_x509.i	2014-03-30 21:05:01.000000000 +0400
@@ -507,6 +507,10 @@
     return X509_REQ_add_extensions(req, exts);
 }
 
+STACK_OF(X509_EXTENSION) *x509_req_get_ext(X509_REQ *request) {
+    return X509_REQ_get_extensions(request);
+}
+
 X509_NAME_ENTRY *x509_name_entry_create_by_txt(X509_NAME_ENTRY **ne, char *field, int type, char *bytes, int len) {
     return X509_NAME_ENTRY_create_by_txt( ne, field, type, (unsigned char *)bytes, len);
 }
--- M2Crypto-0.21.2/M2Crypto/X509.py	2011-01-15 22:10:05.000000000 +0300
+++ M2Crypto-0.21.2/M2Crypto/X509.py	2014-03-30 23:59:07.712541164 +0400
@@ -497,6 +497,7 @@
         """
         assert m2.x509_type_check(self.x509), "'x509' type error"
         return m2.x509_add_ext(self.x509, ext.x509_ext, -1)
+        
 
     def get_ext(self, name):
         """
@@ -967,6 +968,46 @@
         @param ext_stack: Stack of extensions to add.
         """
         return m2.x509_req_add_extensions(self.req, ext_stack._ptr())
+    
+    def get_extensions(self):
+        """
+        Get all extensions of request
+        
+        """
+        request_stack = m2.x509_req_get_ext(self.req)
+        extension_count = m2.sk_x509_extension_num(request_stack)
+        stack = X509_Extension_Stack()
+        for i in range(0, extension_count):
+            ext_ptr = m2.sk_x509_extension_value(request_stack, i)
+            extension = X509_Extension(ext_ptr)
+            stack.push(extension)
+        return stack
+    
+    def get_extension_by_name(self, name):
+        """
+        Get an Extension by short name
+        
+        @type name:      str
+        @param name:     short name of extension
+        @rtype: M2Crypto.X509.X509_Extension
+        @return: M2Crypto.X509.X509_Extension object
+        
+        """
+        request_stack = m2.x509_req_get_ext(self.req)
+        extension_count = m2.sk_x509_extension_num(request_stack)
+        for i in range(0, extension_count):
+            ext_ptr = m2.sk_x509_extension_value(request_stack, i)
+            extension = X509_Extension(ext_ptr)
+            if extension.get_name() == name:
+                return extension
+        return None
+      
+    def get_extension_count(self):
+        """
+        Get count of request extensions
+        """
+        request_stack = m2.x509_req_get_ext(self.req)
+        return m2.sk_x509_extension_num(request_stack)
 
     def verify(self, pkey):
         return m2.x509_req_verify(self.req, pkey.pkey)
