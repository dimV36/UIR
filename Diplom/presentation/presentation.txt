<[autotemplate]
documentclass=[xcolor={dvipsnames,table}]{beamer}
usetheme={Madrid}
usepackage=[utf8]{inputenc}
usepackage=[T2A]{fontenc}
usepackage=[russian,english]{babel}
usepackage={tikz}
usetikzlibrary={shadows}
usepackage={listings}
usepackage={color}
usepackage={tikz}
title=[]{Реализация механизма автоматического выбора сертификата открытого ключа пользователя на основании его контекста безопасности}
date={17 июня 2014}
author={Воронин Д.Л., Муравьёв С.К.}
[autotemplate]>

==== Цель и задачи дипломного проекта ====
'''\underline{Цель}''' работы --- разработка механизма автоматического выбора сертификата открытого ключа пользователя на основании его контекста безопасности.
-- 1em --
Для достижения поставленной цели были поставлены следующие '''\underline{задачи}''':
# Изучить принципы построения инфраструктуры открытых ключей PKI;
# Исследовать современные средства выбора сертификата открытого ключа;
# Разработать способ создания создания сертификатов с контекстом безопасности пользователя;
# Автоматизировать выбор сертификатов, используя механизм многоэкземплярности;
# Показать применение разработанного механизма для аутентификации клиентов СУБД PostgreSQL.

==== Принципы построения PKI ====

В основе PKI лежит использование криптографической системы с открытым ключом и несколько основных принципов:
* Закрытый ключ известен только владельцу;
* Удостоверяющий центр выпускает сертификат открытого ключа, т.о. удостоверяя этот ключ;
* Никто не доверяет друг другу, но все доверяют удостоверяющему центру;
* Удостоверяющий центр подтверждает или опровергает принадлежность открытого ключа лицу, которое владеет соответствующим закрытым ключом.

==== Современные подходы к выбору сертификата  ====

Выбор сертификатов осуществляется автоматически на основе дополнений @X509v3@:
* назначения ключа --- @keyUsage@;
* ограничений --- дополнения @Basic Constraints@, @Name Constraints@;
* ППС (политики применения сертификата) --- дополнения @Certificate Policies@, @Policy Mappings@, @Policy Constraints@. 

==== OpenSSL ==== 
'''OpenSSL''' --- Криптографический пакет для работы с сертификатами.
-- 1em --
Создание дополнений в сертификатах:
* Модификация конфигурационного файла @openssl.conf@;
* Программно:
** Alias на существующее дополнение;
** Реализация структуры дополнения.
-- 1em --
Реализован способ хранения метки безопасности в дополнении @v3\_secon@ (программно).

==== Разработка утилиты создания сертификатов ==== 
Требования:
# Возможность создавать закрытый ключ клиента произвольной длины;
# Создавать запросы на подпись сертификата (CSR) с дополнением @selinuxContext@;
# Проверка корректности метки безопасности;
# Выпуск сертификата удостоверяющим центром.
--1 em --
Реализована утилита на языке Python @pgcert@ с использованием библиотеки M2Crypto.

==== Автоматизация выбора сертификата ====
Механизм многоэкземплярности: 
-- 1em --
<[center]
<<<files/polyinstance.png, width=0.95\textwidth>>>
[center]>

Реализация: модуль @pam\_namespace.so@\newline
Скрипт инициализации: @namespace.init@\newline
Конфигурационный файл: @namespace.conf@
-- 1em --
Доработан модуль @pam\_namespace@. Стало возможным передать значение текущего контекста пользователя в скрипт инициализации @namespace.init@.
 
 
==== Применение механизма для аутентификации клиентов СУБД PostgreSQL ====
<[center]
<<<files/cluster.png, width=0.64\textwidth>>>
[center]>

==== Применение механизма для аутентификации клиентов СУБД PostgreSQL ====

<[center]
<<<files/user2_cert.png, height=0.5\textwidth>>>
[center]>

==== Применение механизма для аутентификации клиентов СУБД PostgreSQL ====

<[center]
<<<files/user2_pgsql.png, height=0.5\textwidth>>>
[center]>

==== Заключение ====

* Для хранения контекста безопасности в сертификате @X509@ было реализовано дополнение @X509v3 selinuxContext@;
* Разработана утилита @pgcert@ генерации сертификатов с дополнением @selinuxContext@;
* Для автоматизации процесса выбора сертификата использовался механизм многоэкземплярности директорий;
* Разработанный механизм был адаптирован для аутентификации клиентов СУБД PostgreSQL;
* Расширен функционал библиотек: @pam\_namespace@, @M2Crypto@;
* Расширен функционал модулей СУБД PostgreSQL: @sslinfo@, @sepgsql@;
* Патч для модуля sslinfo был отправлен мировому сообществу PostgreSQL на предмет включения в состав дистрибутива.

========
<[center]
Спасибо за внимание!
[center]>